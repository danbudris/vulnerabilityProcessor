GIT_VERSION?=v0.0.0-dev

GO_ARCH:=$(shell go env GOARCH)
GO_OS:=$(shell go env GOOS)
BINARY_NAME:=vulnerabilityProcessor
LAMBDA_BINARY_NAME:=vulnerabilityprocessorlambda

.PHONY: default
default: build lint

.PHONY: build
build: vulnerabilityProcessor unit-test ## Generate binaries and run unit tests
vulnerabilityProcessor:
	CGO_ENABLED=0 GOOS=$(GO_OS) GOARCH=$(GO_ARCH) go build -ldflags "-X github.com/danbudris/vulnerabilityProcessor/pkg/version.gitVersion=$(GIT_VERSION) -s -w -extldflags -static" -o bin/darwin/amd64/$(BINARY_NAME) github.com/danbudris/vulnerabilityProcessor/cmd/vulnerabilityProcessorCore

.PHONY: build-cross-platform
build-cross-platform: vulnerability-processor-build-cross-platform unit-test lint
vulnerability-processor-build-cross-platform:
	CGO_ENABLED=0 GOOS=darwin GO_ARCH=amd64 go build -ldflags "-X github.com/danbudris/vulnerabilityProcessor/pkg/version.gitVersion=$(GIT_VERSION) -s -w -extldflags -static" -o bin/darwin/amd64/$(BINARY_NAME) github.com/danbudris/vulnerabilityProcessor/cmd/vulnerabilityProcessorCore
	CGO_ENABLED=0 GOOS=linux GO_ARCH=amd64 go build -ldflags "-X github.com/danbudris/vulnerabilityProcessor/pkg/version.gitVersion=$(GIT_VERSION) -s -w -extldflags -static" -o bin/linux/amd64/$(BINARY_NAME) github.com/danbudris/vulnerabilityProcessor/cmd/vulnerabilityProcessorCore

.PHONY: linux-docker
linux-docker:
	./build/docker_build.sh -v $(GIT_VERSION)

.PHONY: handle-inspector-event-test-docker
handle-inspector-event-test-docker: linux-docker
	docker run --env GITHUB_TOKEN=${GITHUB_TOKEN} -v $(shell pwd)/test/testdata/test.vex:/test.vex -v $(shell pwd)/test/testdata/testEvent.json:/testEvent.json vulnerabilityprocessor/linux:$(GIT_VERSION) handle inspectorEvent -f ./test.vex -e testEvent.json -v 6

.PHONY: inspector-lambda
inspector-lambda: build-lambda zip-lambda

zip-lambda: copy-vex-to-lambda
	cd ./bin/lambda/linux/amd64 && zip -r function.zip . && mv ./function.zip ../../../

build-lambda: unit-test lint
	CGO_ENABLED=0 GOOS=linux GO_ARCH=amd64 go build -ldflags "-X github.com/danbudris/vulnerabilityProcessor/pkg/version.gitVersion=$(GIT_VERSION) -s -w -extldflags -static" -o bin/lambda/linux/amd64/$(LAMBDA_BINARY_NAME) github.com/danbudris/vulnerabilityProcessor/cmd/inspectorLambda

copy-vex-to-lambda:
	cp ./test.vex ./bin/lambda/linux/amd64

.PHONY: clean-lambda
clean-lambda:
	rm ./function.zip


.PHONY: lint
lint: bin/golangci-lint ## Run golangci-lint
	bin/golangci-lint run

bin/golangci-lint: ## Download golangci-lint
bin/golangci-lint: GOLANGCI_LINT_VERSION?=$(shell cat .github/workflows/golangci-lint.yml | yq e '.jobs.golangci.steps[] | select(.name == "golangci-lint") .with.version' -)
bin/golangci-lint:
	curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s $(GOLANGCI_LINT_VERSION)

unit-test:
	go test ./... --cover

.PHONY clean:
	 go clean
	 rm -rf ./bin/darwin
	 rm -rf ./bin/linux
